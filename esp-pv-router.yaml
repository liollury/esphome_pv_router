esphome:
  name: esp-pv-router
  platform: ESP32
  board: esp32dev

external_components:
  - source: components
  
  
# Enable logging
logger:
  level: DEBUG

# Enable Home Assistant API
api:
  
dallas:
  - id: triacBus
    pin: 16
    update_interval: 30s
  - id: tankBus
    pin: 17
    update_interval: 30s


pv_router:
  active_led: GPIO5
  conso_led: GPIO19
  inject_led: GPIO18
  zero_crossing: GPIO23
  vcc_ref: A7
  volt_ref: A4
  current_ref: A5
  tank_temperature: tankTemperature
  tank_target_temperature: tankTargetTemperature
  triac:
    name: "ESP PVR Triac position"
    pin: GPIO22
    load_step: 80 #100
    min_delay: 55
  over_production:
    name: "ESP PVR Over production"
  power_connecter:
    name: "ESP PVR Power connected"
  consumption:
    name: "ESP PVR Consumption"
  instant_power:
    name: "ESP PVR Instant power"
  instant_current:
    name: "ESP PVR Instant current"
  instant_voltage:
    name: "ESP PVR Instant voltage"
  tank_mode: tankMode
  volt_factor: 0.18253
  current_factor: 0.085
  power_margin: 90
  update_interval: 10s

binary_sensor:

select:
  - platform: template
    name: "Tank mode"
    id: tankMode
    optimistic: true
    options:
      - 'OFF'
      - 'AUTO_OFF'
      - 'ON'
      - 'AUTO_ON'
    initial_option: AUTO_OFF

number:
  - platform: template
    name: "ESP PVR Tank target temperature"
    id: tankTargetTemperature
    optimistic: true
    min_value: 0
    max_value: 80
    step: 1
    initial_value: 55
    restore_value: true
    unit_of_measurement: Â°C
    device_class: temperature

sensor:
  - platform: dallas
    address: 0xd33c86f649dca328
    #address: 0x9b3c8df649bd0628
    dallas_id: tankBus
    name: "ESP PVR Tank temperature"
    id: tankTemperature
    accuracy_decimals: 2
    resolution: 11
  - platform: dallas
    address: 0xac3c33f648862928
    dallas_id: triacBus
    name: "ESP PVR Triac temperature"
    id: triacTemperature
    accuracy_decimals: 1
    resolution: 9

    
time:
  - platform: sntp
    timezone: "CET-1CEST-2,M3.5.0/02:00:00,M10.5.0/03:00:00"
    id: sntpTime
    on_time_sync:
      - if:
          condition:
            - lambda: |-
                auto time = id(sntpTime).now();
                int concatime = time.hour * 100 + time.minute;
                return concatime > 830 && concatime < 1930 && id(tankMode).state == "AUTO_OFF";
          then:
            - select.set: 
                id: tankMode
                option: 'AUTO_ON'
          else:
            - if:
                condition:
                  - lambda: |-
                      auto time = id(sntpTime).now();
                      int concatime = time.hour * 100 + time.minute;
                      return concatime < 830 || concatime > 1930 && id(tankMode).state == "AUTO_ON";
                then:
                  - select.set: 
                      id: tankMode
                      option: 'AUTO_OFF'
                    
interval:
  - interval: 20s
    then:
      if:
        condition:
          and:
            - not:
                wifi.connected:
            - lambda: |- 
                return id(tankMode).state == "AUTO_ON" || id(tankMode).state == "ON";
        then:
          - select.set: 
              id: tankMode
              option: 'AUTO_OFF'
  
ota:
  password: "b91864b005e8a2da36ad580bd2a3407384abaee2771fad81f0b1165bfa7e5b0b"


wifi:
  ssid: "llyhome"
  password: "cesttoilaclewifi"
#  ssid: "Zenika-Rennes"
#  password: "Zenik@3006"
  fast_connect: true